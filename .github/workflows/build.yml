# Automatically build the project and run any configured tests for every push
# and submitted pull request. This can help catch issues that only occur on
# certain platforms or Java versions, and provides a first line of defence
# against bad commits.

name: build
on:
  pull_request:
    branches:
      - 1.17
  push:
    branches:
      - 1.17

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
            17    # Minimum supported by Minecraft
        ]
        # and run on both Linux and Windows
        os: [ ubuntu-20.04, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Cache gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
      - name: build
        run: ./gradlew build
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '16' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v2
        with:
          name: Artifacts
          path: build/libs/

      - name: Cleanup Gradle Cache on Linux
        if: ${{ runner.os == 'Linux'}}
        # これらのファイルをGitHub Actionsのキャッシュからリストアすると、将来のビルドで問題が生じるかもしれないので削除。
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
      - name: Cleanup Gradle Cache on Windows
        if: ${{ runner.os == 'Windows'}}
        # これらのファイルをGitHub Actionsのキャッシュからリストアすると、将来のビルドで問題が生じるかもしれないので削除。
        run: |
          get-process | foreach{
          $pName = $_
            if ( $pName.Path -like ( '~/.gradle/caches/modules-2/' + '*') ) {
              Stop-Process $pName.id -Force -ErrorAction SilentlyContinue
            }
          }
          rm -Force ~/.gradle/caches/modules-2/modules-2.lock
          rm -Force ~/.gradle/caches/modules-2/gc.properties
